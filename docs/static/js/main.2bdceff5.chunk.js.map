{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGitfs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","setCategories","categorie","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAkB1C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAa,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,KAEdO,MAAM,kEAKV,SACI,uBAAOC,KAAK,OAAOC,MAASV,EAAYW,SAhBtB,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aAoB/Bb,EAAYgB,WAAa,CACrBf,YAAagB,IAAUC,KAAKC,Y,mCC7BnBC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGF,GACH,mCAETC,EANc,iDAEAF,EAFA,kBAGF,GAHE,oBAIL,oCAJK,SAQDG,MAAMD,GARL,cAQdE,EARc,gBASCA,EAAKC,OATN,uBASbC,EATa,EASbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAftB,kBAkBbK,GAlBa,4CAAH,sDCERO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACjC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACnB,IAEGoB,EDdyBK,CAAazB,GAAhCY,EADsB,EAC5BN,KAAca,EADc,EACdA,QAGrB,OAFAO,QAAQC,IAAIR,GAGR,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDf,IAClDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACMH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAAgCA,GAAZA,EAAIC,aEX/BkB,EAAe,WACxB,IAD8B,EAGM/C,mBAAS,CAAC,cAHhB,mBAGvBgD,EAHuB,KAGXC,EAHW,KAU9B,OACI,qCACI,6BAXM,iBAYN,cAAC,EAAD,CAAalD,YAAakD,IAC1B,uBAEA,6BAEQD,EAAWrB,KAAK,SAAAuB,GAAS,OACrB,cAAC,EAAD,CAAyB/B,SAAU+B,GAArBA,Y,MClBtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2bdceff5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInoutChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory( cats =>  [inputValue, ...cats]);\r\n            setInputValue('');\r\n        } else {\r\n            alert('ey perro la categoria debe ser mayor a 2 car√°cteres , puto');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value = {inputValue} onChange={handleInoutChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","export const getGitfs = async (category) =>{\r\n\r\n    const searchValue = category;\r\n    const maxResult = 10;\r\n    const apiKey = 'Vm0McadpjPG92fGehcaEZjHbyYnZz0tc'\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${searchValue}&limit=${maxResult}&api_key=${apiKey}`;\r\n    // const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${maxResult}&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data: images, loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                { images.map(img => \r\n                    <GifGridItem key = {img.id} {...img}/>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGitfs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGitfs(category)\r\n            .then( imgs => { \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const title = 'GifExpertApp';\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n        // setCategories(['HunterXHunter', ...categories]);\r\n        // setCategories( cats =>  ['HunterXHunter', ...cats]);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            <AddCategory setCategory={setCategories}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( categorie => \r\n                        <GifGrid key={categorie} category={categorie}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n// export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}